package org.example.sbs.routinesjar.utilities;
import com.fasterxml.jackson.databind.*;
import com.fasterxml.jackson.core.*;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class SFPWNewOrganization {

	public SFPWExistingOrganization organisation;
	public SFPWOrganisationGroup[] organisationGroups;
	public SFPWGroupMember[] groupMembers;
	public SFPWCreditLimitInformation[] creditLimits;
	public SFPWCreditLimitInformation[] creditLines;
	public SFPWDealerBands[] dealerBands;
	public SFPWPaymentSource[] paymentSources;
	public SFPWPaymentSource[] defaultPaymentSources;
	public SFPWInsuranceLimit[] insuranceLimits;
	public SFPWHarmonisation[] harmonisedPayments;
	
	public SFPWNewOrganization(String record, java.util.Map<String, String> mdtSFPWContactMap, java.util.Map<String, SFPWRegion> mdtSFPWRegionMap) {
		this.organisation = new SFPWExistingOrganization(record, mdtSFPWContactMap, mdtSFPWRegionMap);
	}
	
	public String getObjectJSONData(SFPWNewOrganization o) {
		ObjectMapper Obj = new ObjectMapper(); 
		try {
			return Obj.writeValueAsString(o);
		} catch (JsonProcessingException e) {
			e.printStackTrace();
			return "";
		}
	}
}
